name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    environment: Development Environment

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run Lint
      run: cd starter/frontend && npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Run Tests
      run: cd starter/frontend && npm run test

  Build:
    needs: [Linting, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # Debug line for AWS IAM user
    - name: Check AWS IAM User (STS Get Caller Identity)
      run: aws sts get-caller-identity

    # Configure Kubernetes context before kubectl commands
    - name: Update Kubeconfig
      run: aws eks update-kubeconfig --name cluster --region us-east-1

    # Debug line for Kubernetes Pods and Nodes after kubeconfig update
    - name: Check Kubernetes Pods and Nodes
      run: kubectl get po,nodes

    - name: Print Environment Variables
      run: |
        echo "REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }}"
        echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}"
        echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
        echo "REPO_NAME=${{ env.REPO_NAME }}"

    - name: Build and Push Docker Image
      working-directory: starter/frontend
      env:
        IMAGE_TAG: final
        REPO_NAME: frontend
      run: |
        docker build --build-arg REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} --tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG

    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: final
        REPO_NAME: frontend
      run: |
        kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        kustomize build | kubectl apply -f -